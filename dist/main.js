(()=>{"use strict";class e{static _lastUid=0;static next(){return e._lastUid+=1,e._lastUid}}class t{static isSemanticSet(e){return e.constructor==this}constructor(e,{inverted:t,_map:s}={}){if(this._map=s||new Map,e)for(const t of e)this.add(t);this._inverted=Boolean(t),this[Symbol.iterator]=()=>this._map.values()}invert(){let e=Array.from(this._map.values()).map((e=>"object"==typeof e?e.clone():e));return new t(e,{inverted:!this._inverted})}clone(){let e=Array.from(this._map.values()).map((e=>"object"==typeof e?e.clone():e));return new t(e,{inverted:this._inverted})}get size(){return this._map.size}identical(e){return!!e&&e.constructor==t&&this.size==e.size&&this.intersection(e).size==this.size}add(e){return null==e||(this._inverted?this._map.delete(t.keyFor(e)):this._map.set(t.keyFor(e),e)),e}delete(e){null!=e&&(this._inverted?this._map.set(t.keyFor(e),e):this._map.delete(t.keyFor(e)))}has(e){return null!=e&&(this._inverted?!this._map.has(t.keyFor(e)):this._map.has(t.keyFor(e)))}every(e){return Array.from(this._map.values()).every(e)}some(e){return Array.from(this._map.values()).some(e)}forEach(e){if(this._inverted)throw"[TODO] Can't iterate on inverted SemanticSet";this._map.forEach(((t,s)=>e(t)))}filter(e){if(this._inverted)throw"[TODO] Can't filter inverted SemanticSet";let s=new t;return this.forEach((t=>{e(t)&&s.add(t)})),s}map(e){if(this._inverted)throw"[TODO] Can't map inverted SemanticSet";let s=new t;return this.forEach((t=>{s.add(e(t))})),s}arrayMap(e){if(this._inverted)throw"[TODO] Can't map inverted SemanticSet";let t=[];return this.forEach((s=>{t.push(e(s))})),t}values(){return this._map.values()}semanticHashValue(){t.keyFor(this.values())}take(){return this.values().next().value}union(e){if(this._inverted&&e._inverted){let s=new Set(e.values());return new t(Array.from(this.values()).filter((e=>s.has(e))),{inverted:!0})}if(this._inverted){let s=new Set(e.values());return new t(Array.from(this.values()).filter((e=>!s.has(e))),{inverted:!0})}if(e._inverted){let s=new Set(this.values());return new t(Array.from(e.values()).filter((e=>!s.has(e))),{inverted:!0})}return new t(Array.from(this.values()).concat(Array.from(e.values())))}intersection(e){return this._inverted&&e._inverted?new t(Array.from(this.values())+Array.from(e.values()),{inverted:!0}):this._inverted?e.filter((e=>this.has(e))):this.filter((t=>e.has(t)))}static keyFor(e){return"function"==typeof e.semanticHashValue?e.semanticHashValue():t.defaultHashValueFor(e)}static defaultHashValueFor(e){if("function"==typeof e.map)return"<"+String(e.map((e=>t.keyFor(e))))+">";if(e.name||e.uid){let s=[e.constructor.name,e.name,e.uid].filter((e=>Boolean(e)));return t.defaultHashValueFor(s)}return e}}class s{constructor(e){this._map=e||new Map,this[Symbol.iterator]=()=>this._map.entries()}set(e,s){this._map.set(t.keyFor(e),s)}values(){return this._map.values()}clone(){let e=new Map;for(const t of this._map){let s;s="object"==typeof t[1]?t[1].clone():t[1],e.set(t[0],s)}return new s(e)}mapValues(e){let t=[];for(const s of this._map.values())t.push(e(s));return t}get(e){return this._map.get(t.keyFor(e))}delete(e){this._map.delete(t.keyFor(e))}}class n{static isAtomList(e){return e instanceof n}static from(e){return n.isAtomList(e)?e:new n(e)}constructor(...e){this._atoms=[],e.flat().forEach((e=>{n.isAtomList(e)?this._atoms=this._atoms.concat(e._unwrap()):this._atoms.push(e)}))}get length(){return this._atoms.length}clone(){return this}first(){return new n(this._atoms[0])}rest(){return new n(this._atoms.slice(1))}reverse(){return new n(this._atoms.slice().reverse())}inspect(){return["div",{style:"font-style: italic"},`AtomList[ ${this._atoms.join(", ")} ]`]}asString(){return this._atoms.join(", ")}identical(e){return!!e&&e.constructor==n&&this._atoms.every(((t,s)=>t==e._atoms[s]))}map(e){return this._atoms.map(e)}reduce(...e){return this._atoms.reduce(...e)}forEach(e){this._atoms.forEach((t=>{e(new n(t))}))}semanticHashValue(){return this._atoms.join(",")}_unwrap(){return this._atoms}}class r{constructor(e,t,s=!1,n=null,r=null){this._name=e,this._arity=t,this._defaultValue=s,this._table=n||new Map}get name(){return this._name}get category(){return"Relation"}get arity(){return this._arity}get defaultValue(){return this._defaultValue}clone(){let e=new Map;for(const t of this._table.entries()){let s=t[0],n=t[1];e.set(s,n.clone())}return new r(this.name,this.arity,this.defaultValue,e)}subjects(){let e=new t;for(const t of this._table)t[1].size>0&&e.add(new n(t[0]));return e}propositions(){let e=new t;for(const t of this._table.keys()){let s=Array.from(this._table.get(t).values());s.length>0&&e.add(new n(this._name,t,s))}return e}_get(e){let s=this._table.get(e);return s||(s=new t,this._table.set(e,s)),s}relatedObjectsForSubject(e){return e=n.from(e),new t(this._get(e.semanticHashValue()).values())}relate(e){if((e=n.from(e)).length!=this._arity)throw console.log("this",this),console.log("atoms",e),`Cannot relate; Wrong arity for relation ${this.name}`;const t=e.first(),s=e.rest();this._get(t.semanticHashValue()).add(s)}unrelate(e){if((e=n.from(e)).length!=this._arity)throw`Cannot unrelate; Wrong arity for relation ${this.name}`;const t=e.first(),s=e.rest();this._get(t.semanticHashValue()).delete(s)}check(e){if((e=n.from(e)).length!=this._arity)throw`Cannot check; Wrong arity for relation ${this.name}`;const t=e.first(),s=e.rest();return this._get(t.semanticHashValue()).has(s)}}class i{constructor(e){this._model=e,this._relateTriggers=new t,this._unrelateTriggers=new t}get relateTriggers(){return this._relateTriggers}get unrelateTriggers(){return this._relateTriggers}addTriggers({relate:e,unrelate:t}){e&&(this.checkRelateContradiction(e),this.runRelateTriggers(e)),t&&(this.checkUnrelateContradiction(t),this.runUnrelateTriggers(t))}checkRelateContradiction(e){e.forEach((e=>{if(this._unrelateTriggers.has(e))throw`relate trigger is contradictive: ${e[0]._name} ${e[1]}`}))}checkUnrelateContradiction(e){e.forEach((e=>{if(this._relateTriggers.has(e))throw`unrelate trigger is contradictive: ${e[0]._name} ${e[1]}`}))}runRelateTriggers(e){e.forEach((e=>{this._relateTriggers.has(e)||(this._relateTriggers.add(e),this._model._performRelateCycle(e[0],this,e[1]))}))}runUnrelateTriggers(e){e.forEach((e=>{this._unrelateTriggers.has(e)||(this._unrelateTriggers.add(e),this._model._performUnrelateCycle(e[0],this,e[1]))}))}}class a{static fromParent(e){const t=e.clone();return t._parent=e,t}constructor({atoms:n,relations:r,derivedRelations:i,invariants:a,_atomSet:o,_parent:c,_relationTable:h}){this._uid=e.next(),o?this._atoms=o:(this._atoms=new t,this._addAtoms(n)),h?this._relations=h:(this._relations=new s,r.forEach((e=>this._addRelation(...e)))),this._parent=c,this._derivedRelationsInput=i,this._derivedRelationArities=new Map,this._multiaryDerivedRelationQueryMakers=new Map,this._unaryDerivedRelationQueryMakers=new Map,i.forEach((e=>{const t=e[0],s=e[1],n=e[2];if(this._derivedRelationArities.set(t,s),s>1)this._multiaryDerivedRelationQueryMakers.set(t,n);else{if(1!=s)throw`Invalid arity ${s} for derived relation ${t}`;this._unaryDerivedRelationQueryMakers.set(t,n)}})),this._invariantInput=a,this._invariants=new Set,a.forEach((e=>this._addInvariant(...e))),this._queryCache=new Map,this._frozen=!1}get frozen(){return this._frozen}get uid(){return this._uid}clone(){const e=new Map;for(const t of this._relations)e.set(t[0],t[1].clone());return new a({_atomSet:this._atoms,_relationTable:this._relations.clone(),_parent:this._parent,derivedRelations:this._derivedRelationsInput,invariants:this._invariantInput})}freeze(){this._frozen=!0}assert(e){if(this._frozen)throw"Can't add assertions to frozen model!";const t={};e.relate&&(t.relate=e.relate.map((e=>[this._relations.get(e[0]),n.from(e[1])]))),e.unrelate&&(t.unrelate=e.unrelate.map((e=>[this._relations.get(e[0]),n.from(e[1])]))),new i(this).addTriggers(t)}_resolveQueryArgument(e){return"Object"==e.constructor.name?this.query(e):e}_resolveQueryArguments(e){return Array.isArray(e)?e.map((e=>this._resolveQueryArgument(e))):this._resolveQueryArgument(e)}check(e,t){let s;s=new n(this._resolveQueryArguments(t)),s.forEach((e=>{if(!this._atoms.has(e))throw`Cannot evaluate predicate for unknown atom ${e.asString()}`}));const r=this._relations.get(e);if(r)return r.check(s);const i=this._derivedRelationArities.get(e);if(!i)throw`unknown relation ${e}`;if(i!=s.length)throw`wrong arity for relation ${e}`;const a=s.first(),o=s.rest();return 1==i?this.subjects(e,t).has(a):this.which(e,a).has(o)}subjects(e){const t=this._relations.get(e);if(t)return t.subjects();const s=this._multiaryDerivedRelationQueryMakers.get(e);if(s)return this._atoms.filter((e=>this.query(s(e)).size>0));const n=this._unaryDerivedRelationQueryMakers.get(e);if(n)return this._atoms.filter((e=>this.query(n(e))));throw`unknown relation ${e}`}bool(e){const s=this.query(e);if("bool"==typeof s)return s;if(t.isSemanticSet(s))return s.size>0;if(n.isAtomList(s))return s.length>0;throw"unexpected query result type!"}parentQuery(e){return this._parent?this._parent.query(e):null}propositions(e){const s=this._relations.get(e);if(s)return s.propositions();const r=this._multiaryDerivedRelationQueryMakers.get(e);if(r)return new t(this._atoms.arrayMap((t=>this.query(r(t)).arrayMap((s=>s.map((s=>s.length>0?new n(e,t,s):null)))).flat().filter((e=>Boolean(e))))).flat());throw`unknown relation ${e}`}which(e,t){if("Object"==t.constructor.name){const s=this.query(t)||[];if("boolean"==typeof s||s.length>1)throw"`which` query requires at most one subject atom";return this.which(e,s)}const s=this._relations.get(e);if(s&&s.arity>1)return s.relatedObjectsForSubject(t);if(s&&1==s.arity)throw`invalid query type 'which' for relation ${e} of arity 1`;const n=this._multiaryDerivedRelationQueryMakers.get(e);if(n)return this.query(n(t));if(this._unaryDerivedRelationQueryMakers.get(e))throw`invalid query type 'which' for relation ${e} of arity 1`;throw`unknown relation ${e}`}firstWhich(e,t){return this.which(e,t).take()}anyWhich(e,t){const s=this._resolveQueryArguments(t).arrayMap((t=>({which:[e,t]})));return this.query({or:s})}allWhich(e,t){const s=this._resolveQueryArguments(t).arrayMap((t=>({which:[e,t]})));return this.query({and:s})}not(e){const t=this.query(e);return null==t||"boolean"==typeof t?!t:t.invert()}or(e){const s=this._resolveQueryArguments(e);return 0==s.length?new t:s.every((e=>"boolean"==typeof e))?new t(s.reduce(((e,t)=>t||e))):new t(s.filter((e=>"boolean"!=typeof e)).reduce(((e,t)=>t.union(e))))}and(e){const s=e.map((e=>this.query(e))),n=s.filter((e=>"boolean"==typeof e)).reduce(((e,t)=>t&&e),!0),r=s.filter((e=>"boolean"!=typeof e));return 0===r.length?n:n?r.reduce(((e,t)=>t.intersection(e))):new t}query({and:e,or:t,not:s,which:n,firstWhich:r,anyWhich:i,allWhich:a,check:o,subjects:c,propositions:h,parent:l,bool:d}){if([e,t,s,n,r,i,a,o,c,h,l,d].filter((e=>Boolean(e)))>1)throw"query accepts exactly one of: and, or, not, which, firstWhich, check, subjects, propositions, parent, bool";let u,p;if(this.frozen&&(u=JSON.stringify(arguments[0]),p=this._queryCache.get(u),p))return p;if(o)p=this.check(...o);else if(n)p=this.which(...n);else if(r)p=this.firstWhich(...r);else if(i)p=this.anyWhich(...i);else if(a)p=this.allWhich(...a);else if(s)p=this.not(s);else if(t)p=this.or(t);else if(e)p=this.and(e);else if(c)p=this.subjects(c);else if(d)p=this.bool(d);else if(l)p=this.parentQuery(l);else{if(!h)throw`Unrecognized query clause \`${u}\``;p=this.propositions(h)}return this.frozen&&this._queryCache.set(u,p),p}_addAtoms(e){e.forEach((e=>this._atoms.add(e)))}_addRelation(e,t){const s=new r(e,t);this._relations.set(e,s)}_addInvariant(e,t){const s=new t(...e.map((e=>this._relations.get(e))));this._invariants.add(s)}_performRelateCycle(e,t,s){s=n.from(s),this._invariants.forEach((n=>{const r=n.beforeRelate(e,s);t.addTriggers(r)})),e.relate(s),this._invariants.forEach((n=>{const r=n.afterRelate(e,s);t.addTriggers(r)}))}_performUnrelateCycle(e,t,s){s=n.from(s),this._invariants.forEach((n=>{const r=n.beforeUnrelate(e,s);t.addTriggers(r)})),e.unrelate(s),this._invariants.forEach((n=>{const r=n.afterUnrelate(e,s);t.addTriggers(r)}))}}class o{constructor({atoms:t,relations:s,derivedRelations:n,invariants:r,modelObservers:i,stateObservers:o,actionGenerators:c,conceptTable:h,init:l},d=[],u,p){if(this._uid=e.next(),this._lineageId=u?u.lineageId:this._uid,this._atoms=t||Array.from(h.mapValues((e=>e.atom))),this._relations=s,this._derivedRelations=n,this._invariants=r,this._modelObservers=i,this._stateObservers=o,this._actionGenerators=c,this._conceptTable=h,this._lastAction=p,this._hasGeneratedNext=!1,u?(this._parent=u,this._model=null):(this._model=new a({atoms:this._atoms,relations:s,derivedRelations:n||[],invariants:r}),this._model.freeze()),l&&d&&d.length>0)throw"Constructor accepts at most one of `init` and `_events`";this._events=l?[l]:d}get uid(){return this._uid}get lineageId(){return this._lineageId}get lastAction(){return this._lastAction}get parent(){return this._parent}getConcept(e){return this._conceptTable.get(e)}applyAction(e){if(e.failed)return this.next([],{lastAction:e});{const t=this.next([e.event],{lastAction:e});return e.succeed(t),t}}generateActions(){return this._actionGenerators.map((e=>e.getActions(this))).flat()}check(e,t){return this._prepareModel(),this._model.check(e,t)}which(e,t){return this._prepareModel(),this._model.which(e,t)}firstWhich(e,t){return this._prepareModel(),this._model.firstWhich(e,t)}anyWhich(e,t){return this._prepareModel(),this._model.anyWhich(e,t)}subjects(e,t){return this._prepareModel(),this._model.subjects(e,t)}query({and:e,or:t,not:s,which:n,firstWhich:r,check:i,subjects:a}){return this._prepareModel(),this._model.query(arguments[0])}state(e,t){return this._prepareModel(),this._conceptTable.get(e).getState(this,t)}queryFn(){return this.query.bind(this)}stateFn(){return this.state.bind(this)}_prepareModel(){this._applyEvents()}_applyEvents(e=new Set){if(this._parent&&this._parent._applyEvents(),this._model||(this._model=a.fromParent(this._parent._model)),0==this._events.length)return;this._model.frozen&&(this._model=this._model.clone());const t=[];this._events.forEach((s=>{this._modelObservers.map((e=>e.prepare(this))),this._model.assert(s),this._modelObservers.map((s=>{const n=s.consider(this);if(n&&e.has(s))throw"Observer triggered twice!";n&&(e.add(s),t.push(...n.events))}))})),this._stateObservers.forEach((s=>{const n=s.consider(this);n&&!e.has(s)&&(e.add(s),t.push(...n.events))})),this._events=t,0==t.length?this._model.freeze():e.size>0&&this._applyEvents(e)}commitState(){if(this._conceptTable)for(let e of this._conceptTable.values())e.hasState&&e.commitWorld(this)}next(e,{lastAction:t}={}){if(this._hasGeneratedNext)throw"Can't call `next` more than once on the same world!";return this._hasGeneratedNext=!0,new o({atoms:this._atoms,relations:this._relations,invariants:this._invariants,modelObservers:this._modelObservers,stateObservers:this._stateObservers,actionGenerators:this._actionGenerators,conceptTable:this._conceptTable},e,this,t)}}class c{beforeRelate(){return{}}beforeUnrelate(){return{}}afterRelate(){return{}}afterUnrelate(){return{}}}class h extends c{constructor(e){super(),this._relation=e}beforeRelate(e,t){if(e!=this._relation)return{};const s=t.first(),n=t.rest(),r=e.relatedObjectsForSubject(s),i={unrelate:[]};return r.forEach((e=>{n.identical(e)||i.unrelate.push([this._relation,[s].concat(e)])})),i}}class l extends c{constructor(e,t){super(),this._lhs=e,this._rhs=t}afterRelate(e,t){return t=n.from(t),e==this._lhs?{relate:[[this._rhs,t.reverse()]]}:e==this._rhs?{relate:[[this._lhs,t.reverse()]]}:{}}afterUnrelate(e,t){return t=n.from(t),e==this._lhs?{unrelate:[[this._rhs,t.reverse()]]}:e==this._rhs?{unrelate:[[this._lhs,t.reverse()]]}:{}}}class d{constructor(e){this._props=e;for(const e of Object.keys(this._props))this[e]=(t,s,n)=>this.render(e,t,s,n)}get props(){return this._props}render(e,t,s,n){const r=this._props[e];return"function"==typeof r?r(t,s,n,this):r}}function u(e,t,s,n,r){return e?e.split(".").reduce(((e,i)=>{let a=e[i];return"function"==typeof a?a(t,s,n,r):a}),r.props):""}function p(e,...t){return(s,n,r,i)=>e.map(((e,a)=>[e,u(t[a],s,n,r,i)])).flat().join("")}class _{constructor(){this._array=[],this._size=0}add(e){this._size+=1;const t=this._lastIndex(e);null===t?this._array.unshift(e):this._array.splice(t+1,0,e)}max(){return this._array[this._size-1]}indexOf(e){const t=this._lastIndex(e);return this._array[t]==e?t:-1}largestNotExceeding(e){const t=this._lastIndex(e);return t?this._array[t]:null}_lastIndex(e){return function(t,s,n){let r=0,i=s,a=Math.ceil((i-r)/2);for(;;){const s=t[a]<=e;if(s&&r==i)return r;if(!s&&r==i)return null;s?r=a:i=a-1,a=r+Math.ceil((i-r)/2)}}(this._array,this._size)}}class m extends d{constructor(e,t,s){if(super(t),this._atom=e,this._worldLineageId=null,s){this._hasState=!0,this._initState=new Map;for(let e in s)this._initState.set(e,s[e]);this._stateTable=new Map,this._committedWorldIds=new _}else this._hasState=!1}get atom(){return this._atom}get hasState(){return this._hasState}setState(e,t,s){if(!this._hasState&&!this._initState.has(t))throw"Can't set state of undeclared key!";if(this._committedWorldIds.indexOf(e.uid)>=0)throw"Can't set state for committed world!";this._stateTable.has(e.uid)||this._stateTable.set(e.uid,new Map);const n=this._stateTable.get(e.uid);if(n.has(t))throw"Can't set state key twice!";n.set(t,s)}getState(e,t){if(!this._initState.has(t))throw"Can't get state of undeclared key!";const s=this._committedWorldIds.largestNotExceeding(e.uid);return s?this._stateTable.get(s).get(t):this._initState.get(t)}commitWorld(e){const t=this._committedWorldIds.max(),s=this._stateTable.get(t);this._stateTable.has(e.uid)||this._stateTable.set(e.uid,new Map);const n=this._stateTable.get(e.uid);if(s)for(let e of s)n.has(e[0])||n.set(e[0],e[1]);for(let e of this._initState)n.has(e[0])||n.set(e[0],e[1]);if(this._worldLineageId&&this._worldLineageId!=e.lineageId)throw"Can't commit worlds from multiple lineages to the same concept!";this._worldLineageId||(this._worldLineageId=e.lineageId),this._committedWorldIds.add(e.uid)}}class y{constructor(e){this._choices=null,this._sceneHead=null,this._sceneBody=null,this._messages=[],this._window=e}get $(){return this._window.$}get choices(){return this._choices}set choices(e){this._choices=e}get sceneHead(){return this._sceneHead}set sceneHead(e){this._sceneHead=e}get sceneBody(){return this._sceneBody}set sceneBody(e){this._sceneBody=e}get messages(){return this._messages}set messages(e){this._messages=e}get lastAction(){return this._lastAction}set lastAction(e){this._lastAction=e}render(e){this._appendNewOutputBlock(),this._renderScene(e),this._renderMessages(e),this._renderChoices(e),this._renderInventory(e),this._scrollToTop(e)}_scrollToTop(e){$("#game-log-wrapper").animate({scrollTop:$("#game-log-wrapper").prop("0")},500)}_appendNewOutputBlock(e){this.lastAction&&(this.$("#game-log-wrapper").prepend("<br><br>"),this.$("#game-log-wrapper").prepend(this.messages.join("<br><br>")),this.$("#game-log-wrapper").prepend(`\n        <div class="user-action">&gt; ${this.lastAction}</div>\n      `)),this.$("#action-list").html("")}_renderScene(e){this.$("#scene > .scene-head").html(this.sceneHead),this.$("#scene > .scene-body").html(this.sceneBody.join("<br>"))}_renderMessages(e){this.$("#latest-message").html(this.messages.join("<br><br>"))}_renderChoices(e){this.$("#scene > .action-list").empty(),this.choices.forEach((t=>{const s=this.$(`<li><a href="#">${t[0]}</a></li>`);s.click((s=>{e.input(t[1]),s.preventDefault()})),this.$("#action-list").append(s)}))}_renderInventory(e){this.$("#inventory-list").empty(),this.inventory.length>0?(this.$("#inventory-list-caption").show(),this.inventory.forEach((e=>{const t=this.$(`<li>${e}</li>`);this.$("#inventory-list").append(t)}))):this.$("#inventory-list-caption").hide()}}class g extends class extends class{constructor({world:e,view:t,inputHandlerFactory:s,onNextWorld:n}){this._world=e,this._view=t,this._inputHandlerFactory=s||(e=>e=>e),this._onNextWorld=n}get world(){return this._world}init(){return this._onNextWorld(this,this._world),this}inputAcceptor(){if(!this._inputAcceptor){const e={},t=this._inputHandlerFactory(this._world);new Promise(((t,s)=>{e.resolve=e=>{t(e)},e.reject=e=>{s(e)}})).then((e=>{const s=t(e).perform(this._world);this._onNextWorld(this,s),this._world=s,this._inputAcceptor=null})),this._inputAcceptor=e}return this._inputAcceptor}input(e){this.inputAcceptor().resolve(e)}}{constructor({world:e,view:t,inputHandlerFactory:s,renderWorld:n,window:r}){super({world:e,view:t,inputHandlerFactory:s,onNextWorld:(e,t)=>{n(e,t,r)}})}}{constructor({gamePresenter:e,world:t,window:s}){super({world:t,window:s,view:new y(s),renderWorld:function(e,t){e._view.sceneHead=e.gamePresenter.sceneTitle(t),e._view.sceneBody=e.gamePresenter.sceneDescription(t),e._view.choices=e.gamePresenter.choices(t).map((s=>[e.gamePresenter.renderProperty(s,"tag",t),s])),e._view.messages=[e.gamePresenter.lastActionMessage(t)],e._view.lastAction=e.gamePresenter.lastActionDesc(t),e._view.inventory=e.gamePresenter.inventory(t),e._view.render(e)}}),this._gamePresenter=e}get gamePresenter(){return this._gamePresenter}}function f(e){let t=e[0].toLowerCase();return"a"==t||"e"==t||"i"==t||"o"==t||"u"==t?`an ${e}`:`a ${e}`}class w{constructor(e){this._cache={},this._worldVersion=null,this._conceptTable=e}choices(e){return e.generateActions()}inventory(e){return e.which("possesses","person:player").arrayMap((t=>{const s=this.getConcept(t);return s.inventoryName?f(this.renderProperty(s,"inventoryName",e)):f(this.renderProperty(s,"title",e))}))}getConcept(e){return this._conceptTable.get(e)}renderProperty(e,t,s){return e.render(t,s.queryFn(),this._conceptTable,s.stateFn())}lastActionDesc(e){return e.lastAction?this.renderProperty(e.lastAction,"tag",e):null}lastActionMessage(e){const t=e.lastAction;if(!t)return null;if(t.failed)return t.render("failMessage",e.queryFn(),this._conceptTable,e.stateFn());return t.render("beforeMessage",e.parent.queryFn(),this._conceptTable)||t.render("message",e.queryFn(),this._conceptTable,e.stateFn())}sceneTitle(e){const t=e.firstWhich("locatedIn","person:player"),s=this.getConcept(t);return this.renderProperty(s,"title",e)}sceneDescription(e){const t=e.firstWhich("locatedIn","person:player"),s=this.getConcept(t);let n=[this.renderProperty(s,"description",e)];const r=e.which("canTake","person:player").arrayMap((t=>f(this.renderProperty(this.getConcept(t),"title",e))));if(r.length>0){const e=function(e,t,s=!1){var n,r;n=e.length<2&&!s?"is":"are",r=e.length>2?", and":2==e.length?"and":null,0==e.length&&(e=["Nothing"]);let i=e.slice(0,-1),a=e.slice(-1),o=[i?i.join(", "):null,r,a,n,t].filter((e=>Boolean(e))).join(" ");return o.charAt(0).toLocaleUpperCase()+o.slice(1)+"."}(r,"here");n.push(e)}return n}}class b extends d{constructor(e,t,{willFail:s}={}){super(t),this._event=e,this._failed=Boolean(s),this._failMessages=null,this._onSuccess=[]}get event(){return this._event}get failed(){return this._failed}onSuccess(e){this._onSuccess.push(e)}onFailure(e){this.failed?e(this.failMessages):this._onFailure.push(e)}perform(e){return e.applyAction(this)}succeed(e){this._onSuccess.forEach((t=>t(e))),e.commitState()}fail(e){return this._failMessages=e,this._onFailure.forEach((t=>t(e)))}}class v{constructor(){this._lastWorldVersion=null,this._cachedActions=null}getActions(e){return e.uid==this._lastWorldVersion||(this._lastWorldVersion=e.uid,this._cachedActions=this.generateActions(e)),this._cachedActions}generateActions(e){throw"Not implemented in abstract class"}}class j extends b{constructor(e,t){super({relate:[["locatedIn",new n(e,t)]]},{destinationName:(e,s)=>s.get(t).render("shortDescription",e,s),message:p`You go to ${"destinationName"}.`,tag:p`Go to ${"destinationName"}`})}}class k extends b{constructor(e,t){super({relate:[["possesses",new n(e,t)]]},{objectName:(e,s)=>s.get(t).render("title",e,s),containerPhrase:(e,s)=>{const n=e({firstWhich:["containedIn",t]});return n?`from the ${s.get(n).render("title",e,s)}`:""},message:"Taken.",tag:p`Take the ${"objectName"} ${"containerPhrase"}`})}}class W extends b{constructor(e,t,s){super({unrelate:[["hasWrittenOnFirst",new n(e,t)],["hasWrittenOnSecond",new n(e,s)]]},{subjectName:(t,s)=>s.get(e).render("title",t,s),tag:p`Erase the writing on the ${"subjectName"}`,beforeMessage:(e,t)=>{const s=t.get("object:mut-1");return e({check:["canSee",["person:player","object:mut-1"]]})?`<i>Zorp!</i> In a flash of blue light, the ${s.render("title",e,t)} vanishes!`:e({check:["canHear",["person:player","object:mut-1"]]})?`You hear a muffled <i>zorp!</i> from the direction of ${t.get(e({firstWhich:["locatedIn","object:mut-1"]})).render("shortDescription",e,t)}.`:null},message:"You wipe the slate clean."})}}class A extends b{constructor(e,t){super({relate:[["hasWrittenOnFirst",new n(t,e)]]},{wordName:(t,s)=>s.get(e).render("title",t,s),objectName:(e,s)=>s.get(t).render("title",e,s),message:p`You carefully inscribe the word ${"wordName"} on the slate.`,tag:p`Write ${"wordName"} on the ${"objectName"}`})}}class M extends b{constructor(e,t){super({relate:[["hasWrittenOnSecond",new n(t,e)]]},{wordName:(t,s)=>s.get(e).render("title",t,s),objectName:(e,s)=>s.get(t).render("title",e,s),adjectiveName:(e,s)=>{let n=e({firstWhich:["hasWrittenOnFirst",t]});return s.get(n).render("title",e,s)},tag:p`Write ${"wordName"} on the ${"objectName"}, after ${"adjectiveName"}`,message:(e,t)=>`There is a flash of green light! On the poesiograph's receiving tray, ${f(t.get("object:mut-1").render("title",e,t))} has appeared.`})}}class O extends b{constructor(e,t,s){super({unrelate:[["isLocked",new n(e)]]},{unlockableName:(t,s)=>s.get(e).render("title",t,s),keyName:(e,s)=>s.get(t).render("title",e,s),tag:p`Unlock the ${"unlockableName"} with the ${"keyName"}`,message:p`You unlock the ${"unlockableName"} with the ${"keyName"}.`,failMessage:p`The ${"keyName"} doesn't fit the lock.`},s)}}class C extends b{constructor(e,t,s){const r=[["hasBeenOpenedAtLeastOnce",new n(e)]];t&&r.push(["possesses",["person:player",t]]),super({relate:r,unrelate:[["isClosed",new n(e)]]},{objectName:(t,s)=>s.get(e).render("title",t,s),message:p`You open the ${"objectName"}`,tag:p`Open the ${"objectName"}`},s)}}class S extends b{constructor(e,t,s){const r=[["isClosed",new n(e)]],i=[];t&&(i.push(["possesses",["person:player",t]]),r.push(["locatedIn",["lid","void"]])),super({relate:r,unrelate:i},{objectName:(t,s)=>s.get(e).render("title",t,s),message:p`You close the ${"objectName"}.`,tag:p`Close the ${"objectName"}.`,failMessage:p`You can't close the ${"objectName"} without the lid!`},s)}}class T extends b{constructor(){super({unrelate:[["possesses",new n("person:player","object:mut-1")]],relate:[["contains",new n("object:cash-box","object:mut-1")]]},{message:"The vending machine accepts your money with a whir.",tag:"Put a dollar in the vending machine"})}succeed(e){const t=e.getConcept("object:vending-machine"),s=t.getState(e,"amount");t.setState(e,"amount",s+1),super.succeed(e)}}class x extends b{constructor(){super({unrelate:[["isClosed",new n("object:vending-machine")]]},{message:"The vending machine drops a bag of tortilla chips.",tag:"Buy some chips from the vending machine"})}succeed(e){const t=e.getConcept("object:vending-machine"),s=t.getState(e,"amount");t.setState(e,"amount",s-3),super.succeed(e)}}class N extends b{constructor(){super({},{message:"Wow! That's delicious.",tag:"Eat a chip with salsa"})}}const F={[t.keyFor(new n("adjective:paper","noun:money"))]:"dollar bill",[t.keyFor(new n("adjective:paper","noun:bird"))]:"origami crane",[t.keyFor(new n("adjective:glass","noun:key"))]:"glass key",[t.keyFor(new n("adjective:glass","noun:bird"))]:"porcelain dove",[t.keyFor(new n("adjective:metal","noun:money"))]:"golden coin",[t.keyFor(new n("adjective:metal","noun:key"))]:"brass key"},I=new class{constructor(e){this._map=new s,e.forEach((e=>{this._map.set(new n(e.atom),e)}))}set(e,t){this._map.set(e,t)}values(){return this._map.values()}clone(){return this._map.clone()}mapValues(e){return this._map.mapValues(e)}get(e){return this._map.get(e)}delete(e){this._map.delete(e)}}([new m("person:player",{title:"you"}),new m("object:jar",{title:"jar of salsa",shortDescription:"a jar of salsa"}),new m("scene:studio",{title:"The Studio",shortDescription:"the studio",writingDescription:(e,t)=>{const s=e({firstWhich:["hasWrittenOnFirst","object:pg"]}),n=e({firstWhich:["hasWrittenOnSecond","object:pg"]});return n?` On its slate is written "${t.get(s).wordForSlateDescription()} ${t.get(n).wordForSlateDescription()}."`:s?` On its slate is written "${t.get(s).wordForSlateDescription()}."`:""},description:p`You are in your studio. On a table in the center of the room rests your trusty poesiograph.${"writingDescription"}<br><br>Your dining room lies beyond a glass door to the north.`}),new m("scene:balcony",{title:"On the Balcony",shortDescription:"the balcony",chestStatus:(e,t)=>e({not:{check:["isClosed",["object:chest"]]}})?"open":e({check:["isLocked",["object:chest"]]})?"closed and locked":"closed and unlocked",salsaHint:(e,t)=>e({not:{check:["hasBeenOpenedAtLeastOnce",["object:chest"]]}})?"You think there might be salsa in it. ":"",description:p`You stand on a balcony overlooking the city. A wooden chest is here. It is fitted with shiny brass hasps and a brass lock. ${"salsaHint"}It is ${"chestStatus"}.`}),new m("scene:hallway",{title:"In the Hallway",shortDescription:"the hallway",whitespace:(e,t,s)=>{const n=s("object:vending-machine","amount"),r=e({and:[{check:["contains",["object:vending-machine","object:chips"]]},{check:["isClosed",["object:vending-machine"]]}]});return 0!=n||r?"<br>":""},vendingMachineStateMessage:(e,t,s)=>{const n=s("object:vending-machine","amount");return 0==n?"":` The vending machine's red LED display shows "$${n}.00."`},chipsPriceMessage:(e,t,s)=>e({and:[{check:["contains",["object:vending-machine","object:chips"]]},{check:["isClosed",["object:vending-machine"]]}]})?"A bag of tortilla chips costs three dollars.":"",description:p`You are in the hallway of your apartment building. A vending machine stands against the wall.${"whitespace"}${"chipsPriceMessage"}${"vendingMachineStateMessage"}`}),new m("object:pg",{title:"poesiograph",shortDescription:"your poesiograph",description:"An elaborate device surmounted by a writing slate."}),new m("object:vending-machine",{title:"vending machine"},{amount:0}),new m("object:cash-box",{title:"cash box"}),new m("object:mut-1",{adjective:(e,t)=>{const s=e({firstWhich:["hasAdjectiveProperty","object:mut-1"]});return t.get(s).title()},noun:(e,t)=>{const s=e({firstWhich:["hasNounProperty","object:mut-1"]});return t.get(s).title()},title:(e,s)=>{const r=e({firstWhich:["hasAdjectiveProperty","object:mut-1"]}),i=e({firstWhich:["hasNounProperty","object:mut-1"]}),a=new n(r,i);return F[t.keyFor(a)]||"inscrutable lump of protomatter"},carryMessage:(e,t)=>`You pick up the ${(void 0).title(e,t)}`}),new m("word:ka",{title:"the word ka",wordForSlateDescription:"ka"}),new m("adjective:paper",{title:"paper"}),new m("noun:key",{title:"key"}),new m("word:lo",{title:"the word lo",wordForSlateDescription:"lo"}),new m("adjective:glass",{title:"glass"}),new m("noun:money",{title:"coin"}),new m("word:beh",{title:"the word beh",wordForSlateDescription:"beh"}),new m("adjective:metal",{title:"metal"}),new m("noun:bird",{title:"bird"}),new m("object:chest",{title:"wooden chest"}),new m("object:jar",{title:"jar of salsa",openParen:e=>e({check:["isClosed","object:jar"]})?"(closed)":"(open)",inventoryName:p`jar of salsa ${"openParen"}`}),new m("object:lid",{title:"salsa jar lid"}),new m("object:chips",{title:"bag of tortilla chips",openParen:e=>e({check:["isClosed","object:chips"]})?"(closed)":"(open)",inventoryName:p`bag of tortilla chips ${"openParen"}`})]);let P=[[["locatedIn"],h],[["possessedBy"],h],[["locationOf","locatedIn"],l],[["adjacentTo"],class extends c{constructor(e){super(),this._relation=e}afterRelate(e,t){if(e!=this._relation)return{};const s=t.first(),n=t.rest();return{relate:[[this._relation,[n,s]]]}}afterUnrelate(e,t){if(e!=this._relation)return{};const s=t.first(),n=t.rest();return{unrelate:[[this._relation,[n,s]]]}}}],[["possesses","possessedBy"],l],[["locatedIn","possesses"],class extends c{constructor(e,t){super(),this._locatedIn=e,this._possesses=t}afterRelate(e,t){const s=t.first(),r=t.rest();return e==this._locatedIn?{relate:this._possesses.relatedObjectsForSubject(s).arrayMap((e=>[this._locatedIn,new n(e,r)]))}:e==this._possesses?{relate:this._locatedIn.relatedObjectsForSubject(s).arrayMap((e=>[this._locatedIn,new n(r,e)]))}:{}}}],[["contains","containedIn"],l],[["isWrittenFirstOn","hasWrittenOnFirst"],l],[["isWrittenSecondOn","hasWrittenOnSecond"],l],[["hasAdjectiveMeaning","isAdjectiveMeaningOf"],l],[["hasNounMeaning","isNounMeaningOf"],l],[["hasNounProperty"],h],[["hasAdjectiveProperty"],h],[["hasNounProperty","isNounPropertyOf"],l],[["hasAdjectiveProperty","isAdjectivePropertyOf"],l],[["keyTypeUnlocks","unlockableByKeyType"],l]];const E=[new class{constructor({query:e,modelCondition:t,effect:s}){this._query=e,this._modelCondition=t,this._preEventModelValue=null,this._effect=s}examineModel(e){return this._query?e.query(this._query):null}newModelValue(e){const t=this.examineModel(e._model);return!t||t.identical(this._preEventModelValue)?null:t}prepare(e){this._preEventModelValue=this.examineModel(e._model)}consider(e){const t=this.newModelValue(e);return null!==t?this._effect(t,this._preEventModelValue,e._model):null}}({query:{or:[{propositions:"hasWrittenOnFirst"},{propositions:"hasWrittenOnSecond"}]},effect:(e,t,s)=>{let n,r=s.firstWhich("hasNounMeaning",{firstWhich:["hasWrittenOnSecond","object:pg"]}),i=s.firstWhich("hasAdjectiveMeaning",{firstWhich:["hasWrittenOnFirst","object:pg"]}),a=s.firstWhich("locatedIn","object:pg"),o="object:mut-1";if(i&&r)n=[{relate:[["hasAdjectiveProperty",[o,i]],["hasNounProperty",[o,r]],["locatedIn",[o,a]]]}];else{let e=s.firstWhich("possessedBy",o),t=s.firstWhich("locatedIn",o),r=s.firstWhich("containedIn",o),i=[];e&&i.push(["possessedBy",[o,e]]),t&&i.push(["locatedIn",[o,t]]),r&&i.push(["containedIn",[o,r]]),n=[{unrelate:i}]}return{events:n}}})],q=[new class{constructor({query:e,stateConditions:t,modelCondition:s,effect:n}){this._query=e,this._stateConditions=t,this._effect=n}examineConceptState(e){return this._stateConditions.map((t=>e.getConcept(t[0]).getState(e,t[1])))}consider(e){return this.examineConceptState(e).every(((e,t)=>e==this._stateConditions[t][2]))?this._effect(null,null,e._model):null}}({stateConditions:[["object:vending-machine","amount",3]],effect:(e,t,s)=>({events:[{relate:[["isPaidEnough",["object:vending-machine"]]]}]})})],B=[new class extends v{generateActions(e){return e.which("canGoTo","person:player").arrayMap((e=>new j("person:player",e)))}},new class extends v{generateActions(e){return e.which("canTake","person:player").arrayMap((e=>new k("person:player",e)))}},new class extends v{generateActions(e){return e.which("canWriteOn","person:player").arrayMap((t=>{let s=e.firstWhich("hasWrittenOnFirst",t),n=e.firstWhich("hasWrittenOnSecond",t);return s&&n?new W(t,s,n):null})).filter((e=>e))}},new class extends v{generateActions(e){let t=e.which("canWriteOn","person:player"),s=e.firstWhich("hasWrittenOnFirst","object:pg"),n=e.firstWhich("hasWrittenOnSecond","object:pg"),r=e.which("knowsWord","person:player");return n?[]:s?t.arrayMap((e=>r.filter((e=>!e.identical(s))).arrayMap((t=>new M(t,e))))).flat():t.arrayMap((e=>r.arrayMap((t=>new A(t,e))))).flat()}},new class extends v{generateActions(e){const t=e.which("canAttemptUnlock","person:player"),s=e.query({and:[{which:["possesses","person:player"]},{which:["isNounPropertyOf","noun:key"]}]});return t.arrayMap((t=>s.arrayMap((s=>{let n;return n=!e.check("canUnlock",[s,t]),new O(t,s,{willFail:n})})))).flat()}},new class extends v{generateActions(e){return e.which("canOpen","person:player").arrayMap((t=>{const s=e.firstWhich("hasLid",t);return new C(t,s)}))}},new class extends v{generateActions(e){return e.which("canClose","person:player").arrayMap((t=>{const s=e.firstWhich("hasLid",t),n=s&&!e.check("possesses",["person:player",s]);return new S(t,s,{willFail:n})}))}},new class extends v{generateActions(e){return e.check("canPay",["person:player","object:vending-machine"])?new T:[]}},new class extends v{generateActions(e){return e.check("canGetChipsFrom",["person:player","object:vending-machine"])?new x:[]}},new class extends v{generateActions(e){return e.query({and:[{check:["possesses",["person:player","object:chips"]]},{check:["possesses",["person:player","object:jar"]]},{not:{check:["isClosed",["object:jar"]]}},{not:{check:["isClosed",["object:chips"]]}}]})?new N:[]}}];let R=new o({relations:[["locatedIn",2],["locationOf",2],["adjacentTo",2],["isRoom",1],["canCarry",2],["possesses",2],["possessedBy",2],["contains",2],["containedIn",2],["isPgraph",1],["isExaminable",1],["isLocked",1],["isClosed",1],["canBeOpenedManually",1],["canBeClosedManually",1],["unlockableByKeyType",2],["keyTypeUnlocks",2],["hasBeenOpenedAtLeastOnce",1],["knowsWord",2],["isWrittenFirstOn",2],["hasWrittenOnFirst",2],["isWrittenSecondOn",2],["hasWrittenOnSecond",2],["hasWriting",1],["isPaidEnough",1],["hasLid",2],["hasAdjectiveMeaning",2],["isAdjectiveMeaningOf",2],["hasNounMeaning",2],["isNounMeaningOf",2],["hasNounProperty",2],["hasAdjectiveProperty",2],["isNounPropertyOf",2],["isAdjectivePropertyOf",2]],derivedRelations:[["canHear",2,e=>({or:[{anyWhich:["locationOf",{which:["locatedIn",e]}]},{anyWhich:["contains",{anyWhich:["locationOf",{which:["locatedIn",e]}]}]},{anyWhich:["locationOf",{anyWhich:["adjacentTo",{which:["locatedIn",e]}]}]},{anyWhich:["contains",{anyWhich:["locationOf",{anyWhich:["adjacentTo",{which:["locatedIn",e]}]}]}]}]})],["canBeUnlockedBy",2,e=>({and:[{which:["isNounPropertyOf","noun:key"]},{anyWhich:["isAdjectivePropertyOf",{which:["unlockableByKeyType",e]}]}]})],["canUnlock",2,e=>({and:[{check:["hasNounProperty",[e,"noun:key"]]},{anyWhich:["keyTypeUnlocks",{which:["hasAdjectiveProperty",e]}]}]})],["canOpen",2,e=>({and:[{which:["isColocatedWith",e]},{subjects:"canBeOpenedManually"},{subjects:"isClosed"},{not:{subjects:"isLocked"}}]})],["canClose",2,e=>({and:[{which:["isColocatedWith",e]},{subjects:"canBeClosedManually"},{not:{subjects:"isClosed"}}]})],["canExamine",2,e=>({and:[{which:["isColocatedWith",e]},{subjects:"isExaminable"}]})],["openlyContains",2,e=>({and:[{not:{check:["isClosed",[e]]}},{which:["contains",e]}]})],["inaccessiblyContains",2,e=>({and:[{check:["isClosed",[e]]},{which:["contains",e]}]})],["isColocatedWith",2,e=>({which:["locationOf",{firstWhich:["locatedIn",e]}]})],["canSee",2,e=>({or:[{which:["isColocatedWith",e]},{anyWhich:["openlyContains",{which:["isColocatedWith",e]}]}]})],["canGoTo",2,e=>({which:["adjacentTo",{firstWhich:["locatedIn",e]}]})],["canTake",2,e=>({and:[{not:{anyWhich:["contains",{subjects:"isClosed"}]}},{which:["canSee",e]},{which:["canCarry",e]},{not:{which:["possesses",e]}}]})],["canAttemptUnlock",2,e=>({and:[{which:["canSee",e]},{subjects:"isLocked"}]})],["canWriteOn",2,e=>({and:[{which:["canSee",e]},{subjects:"isPgraph"}]})],["isWrittenOn",2,e=>({or:[{which:["isWrittenFirstOn",e]},{which:["isWrittenSecondOn",e]}]})],["hasWrittenOn",2,e=>({or:[{which:["hasWrittenOnFirst",e]},{which:["hasWrittenOnSecond",e]}]})],["canPay",2,e=>({and:[{check:["possessedBy",["object:mut-1",e]]},{check:["hasAdjectiveProperty",["object:mut-1","adjective:paper"]]},{check:["hasNounProperty",["object:mut-1","noun:money"]]},{which:["canSee",e]}]})],["canGetChipsFrom",2,e=>({and:[{which:["canSee",e]},{subjects:"isPaidEnough"},{subjects:"isClosed"}]})]],invariants:P,modelObservers:E,stateObservers:q,actionGenerators:B,conceptTable:I,init:{relate:[["isRoom",["scene:balcony"]],["isRoom",["scene:hallway"]],["isRoom",["scene:studio"]],["locatedIn",["person:player","scene:balcony"]],["locatedIn",["object:pg","scene:studio"]],["locatedIn",["object:chest","scene:balcony"]],["contains",["object:chest","object:jar"]],["locatedIn",["object:vending-machine","scene:hallway"]],["contains",["object:vending-machine","object:chips"]],["isClosed",["object:vending-machine"]],["locatedIn",["object:cash-box","scene:hallway"]],["isClosed",["object:cash-box"]],["canBeOpenedManually",["object:chest"]],["canBeClosedManually",["object:chest"]],["canBeOpenedManually",["object:jar"]],["canBeClosedManually",["object:jar"]],["isClosed",["object:jar"]],["canBeOpenedManually",["object:chips"]],["isClosed",["object:chips"]],["hasLid",["object:jar","object:lid"]],["isClosed",["object:chest"]],["isLocked",["object:chest"]],["canCarry",["person:player","object:mut-1"]],["canCarry",["person:player","object:jar"]],["canCarry",["person:player","object:chips"]],["isPgraph",["object:pg"]],["adjacentTo",["scene:studio","scene:balcony"]],["adjacentTo",["scene:studio","scene:hallway"]],["hasAdjectiveMeaning",["word:ka","adjective:paper"]],["hasAdjectiveMeaning",["word:lo","adjective:glass"]],["hasAdjectiveMeaning",["word:beh","adjective:metal"]],["hasNounMeaning",["word:ka","noun:key"]],["hasNounMeaning",["word:lo","noun:money"]],["hasNounMeaning",["word:beh","noun:bird"]],["knowsWord",["person:player","word:ka"]],["knowsWord",["person:player","word:lo"]],["knowsWord",["person:player","word:beh"]],["unlockableByKeyType",["object:chest","adjective:metal"]],["isWrittenFirstOn",["word:lo","object:pg"]],["isWrittenSecondOn",["word:ka","object:pg"]]]}}).applyAction(new class extends b{constructor(e,t){super({},{tag:"",message:"You have returned home after a long journey. Standing on your balcony overlooking the city, you find that you crave chips and salsa. You're pretty sure there's a jar of salsa in that locked chest, but you can't remember where you left the key."})}});!function(e){new g({window:e,world:R,gamePresenter:new w(I)}).init()}(window,window.$)})();